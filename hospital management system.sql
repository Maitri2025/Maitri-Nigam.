create database if not exists Hospital_management_system;
use Hospital_Management_System;

-- Task 1: Task 1 , Task 2 and Task 5--
/*  Task 1: Database Schema Design  Create the tables for the hospital database: patients, doctors, appointments, treatments, and bills.


Task 2: Define Relationships (Using Primary and Foreign Keys) by creating ER diagram
Establish primary keys for each table.
Implement foreign key relationships:
Patients ↔ Appointments (One-to-many)
Doctors ↔ Appointments (One-to-many)
Patients ↔ Treatments (One-to-many)
Doctors ↔ Treatments (One-to-many)
Patients ↔ Bills (One-to-many)

Task 5: Data Integrity and Constraints
Implement NOT NULL constraints on essential fields such as patient_id, doctor_id, appointment_date, and amount.
Add CHECK constraints to ensure valid data (e.g., amount should be greater than 0, appointment_date should be a future date).
Use default values for fields like status (e.g., default "Pending" for appointments).
*/

create table patients (
patient_id int primary key ,
patient_name varchar(100),
gender varchar(50) Not Null,
phone varchar(15) not null,
email_address varchar(100),
address varchar(100)
);
create table doctors(
doctor_id int primary key ,
doctor_name varchar(100),
department varchar(100) ,
department_id varchar(100),
phone  varchar(15) not null
);
 create table appointments(
 appointment_id int primary key,
 patient_id int not null,
 doctor_id int not null,
 appointment_date date  not null check ( appointment_date >= '2025-03-03' ),
 appointment_time time,
 status  varchar(100) not null default 'Pending',
 foreign key (patient_id) references  patients(patient_id),
 foreign key (doctor_id) references doctors(doctor_id)
 );
 
 create table treatments(
 treatment_id int  primary key,
 patient_id int not null,
 doctor_id int not null,
 treatment_type varchar(100),
 treatment_date date,
 foreign key (patient_id) references patients(patient_id),
 foreign key(doctor_id) references doctors(doctor_id)
 );
 
 create table bills(
 bill_id int  primary key,
 patient_id int not null,
 amount decimal(10,2) not null check(amount >0),
 bill_date date not null,
 status varchar(100) not null default 'Unpaid',
 foreign key (patient_id) references patients(patient_id)
 );
 
 -- Insert Patients
INSERT INTO Patients (patient_id,patient_name, gender, phone, email_address, address) VALUES
(1,'Amit Sharma', 'Male', '9876543210', 'amit.sharma@example.com', 'Delhi'),
(2,'Priya Iyer', 'Female', '9876543211', 'priya.iyer@example.com', 'Mumbai'),
(3,'Rahul Verma', 'Male', '9876543212', 'rahul.verma@example.com', 'Bangalore'),
(4,'Neha Gupta', 'Female', '9876543213', 'neha.gupta@example.com', 'Kolkata'),
(5,'Arjun Reddy', 'Male', '9876543214', 'arjun.reddy@example.com', 'Hyderabad');

-- Insert Doctors
INSERT INTO Doctors ( doctor_id,doctor_name, department,department_id, phone) VALUES
(1,'Dr. Ramesh Kumar', 'Cardiology','Cardio1', '9876543220'),
(2,'Dr. Sneha Menon', 'Dermatology','Dermato4', '9876543221'),
(3,'Dr. Vishal Patil', 'Dermatology','Dermato4', '9876543222'),
(4,'Dr. Ananya Singh', 'Pediatrics', 'Pediatric2', '9876543223'),
(5,'Dr. Rajesh Khanna', 'Cardiology','Cardio1', '9876543224');

drop table doctors;
drop table patients;
drop table appointments;
drop table bills;
drop table treatments;

-- Insert Appointments

INSERT INTO Appointments (appointment_id, patient_id, doctor_id, appointment_date, appointment_time, status) values
(1, 1, 1, '2025-03-15', '10:00:00', 'Pending'),

(2, 2, 2, '2025-03-20', '11:30:00', 'Completed'),

(3, 3, 1, '2025-03-22', '13:30:00', 'Pending'),

(4, 4, 4, '2025-03-25', '15:00:00', 'Cancelled'),

(5, 5, 5, '2025-03-27', '16:00:00', 'Completed');

-- Insert Treatments
INSERT INTO Treatments (treatment_id,patient_id, doctor_id, treatment_type, treatment_date) VALUES
(1,1, 1, 'Heart Surgery','2025-01-10'),
(2,2, 2, 'Knee Replacement','2025-01-15'),
(3,3, 1, 'Skin Allergy Treatment','2025-01-20'),
(4,4, 4, 'Child Vaccination','2025-02-01'),
(5,5, 5, 'Brain MRI','2025-02-10');

-- Insert Bills
INSERT INTO Bills (bill_id, patient_id, amount, bill_date, status)

VALUES

(1, 1, 50000.00, '2025-01-10', 'Unpaid'),

(2, 2, 30000.00, '2025-01-15', 'Paid'),

(3, 3, 20000.00, '2025-01-20', 'Unpaid'),

(4, 4, 10000.00, '2025-02-01', 'Paid'),

(5, 5, 70000.00, '2025-02-10', 'Unpaid');
/* Task 3: SQL Queries
List all upcoming appointments for a specific doctor, including appointment_id, patient_name, appointment_date, appointment_time, and status.
Calculate the total revenue generated by a specific department in the last month, including department_id and total_amount.
Retrieve a list of all treatments provided to a specific patient, including treatment_type, doctor_name, treatment_date.

*/

-- List all upcoming appointments for a specific doctor, including appointment_id, patient_name, appointment_date, appointment_time, and status.--
 select a.appointment_id , p.patient_name, a. appointment_date, a.appointment_time, a.status
 from appointments a
 Join patients p on p.patient_id= a.patient_id
 where doctor_id=1
 order by appointment_date, appointment_time;
 
 -- Calculate the total revenue generated by a specific department in the last month, including department_id and total_amount.
 
select d.department, d.department_id,Sum(b.amount) as total_amount
from bills b
join patients p on p.patient_id=b.patient_id
join appointments a on p.patient_id=a.patient_id
join doctors d on d.doctor_id=a.doctor_id
where d.department='Dermatology' and bill_date=DATE_SUB('2025-03-03', INTERVAL 2 MONTH)
group by d.department, d.department_id;

-- Retrieve a list of all treatments provided to a specific patient, including treatment_type, doctor_name, treatment_date.
 select t.patient_id,p.patient_name,t.treatment_type,t.treatment_id,t.doctor_id,t.treatment_date
 from treatments t
 join patients p on t.patient_id=p.patient_id
 where patient_id =1;


